{
  "address": "0xBA078cE2346d028fC3c314eda8EBf54eC7Bb0df9",
  "abi": [
    {
      "inputs": [],
      "name": "ActorDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ForbiddenTransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidConformityState",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "votingPower",
          "type": "uint8"
        }
      ],
      "name": "InvalidVotingPower",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MemberDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionNotFromOriginalActorAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserCannotManageContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserNotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CONFORMITY_STATE_CORRECTIVE_MEASURE_NEEDED",
      "outputs": [
        {
          "internalType": "enum ConformityState.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFORMITY_STATE_FUNCTIONING",
      "outputs": [
        {
          "internalType": "enum ConformityState.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFORMITY_STATE_WAITING_REVIEW",
      "outputs": [
        {
          "internalType": "enum ConformityState.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "infoURI_",
          "type": "string"
        }
      ],
      "name": "addActor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contract_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "actor_",
          "type": "address"
        }
      ],
      "name": "addContractToActor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "infoURI_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "votingPower_",
          "type": "uint8"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractAddress_",
          "type": "address"
        }
      ],
      "name": "assertOpFromContractManager",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contract_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "checkAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "getActor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum ConformityState.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "infoURI",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "participatingContracts",
              "type": "address[]"
            }
          ],
          "internalType": "struct IUserRegistry.Actor",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "getActorName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "getManagingContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "votingPower",
              "type": "uint8"
            },
            {
              "internalType": "enum ConformityState.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "managingContractAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "infoURI",
              "type": "string"
            }
          ],
          "internalType": "struct IUserRegistry.Member",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member_",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender_",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "memberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        }
      ],
      "name": "setTraceabilityContractFactoryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "infoURI_",
          "type": "string"
        }
      ],
      "name": "updateActor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "enum ConformityState.State",
          "name": "newState_",
          "type": "uint8"
        }
      ],
      "name": "updateActorState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "infoURI_",
          "type": "string"
        }
      ],
      "name": "updateMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "managingContractAddress_",
          "type": "address"
        }
      ],
      "name": "updateMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr_",
          "type": "address"
        },
        {
          "internalType": "enum ConformityState.State",
          "name": "newState_",
          "type": "uint8"
        }
      ],
      "name": "updateMemberState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe2b7ac204137b1c56da86940f21070e10d8b0b47bd9d4944cb5f74de063744f9",
  "receipt": {
    "to": null,
    "from": "0x90A84A551585BcC79D35Cc737e1A54DfD9ca8eF6",
    "contractAddress": "0xBA078cE2346d028fC3c314eda8EBf54eC7Bb0df9",
    "transactionIndex": 63,
    "gasUsed": "1315089",
    "logsBloom": "0x
    "blockHash": "0x87052b82127fcb3c912e5040d125801d1b35b62e1cb84cff4fb2697990446d46",
    "transactionHash": "0xe2b7ac204137b1c56da86940f21070e10d8b0b47bd9d4944cb5f74de063744f9",
    "logs": [],
    "blockNumber": 4319648,
    "cumulativeGasUsed": "8717681",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f7d442adf3a01c94d3c08e2deef7bbc6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ActorDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ForbiddenTransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConformityState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"votingPower\",\"type\":\"uint8\"}],\"name\":\"InvalidVotingPower\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MemberDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionNotFromOriginalActorAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserCannotManageContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CONFORMITY_STATE_CORRECTIVE_MEASURE_NEEDED\",\"outputs\":[{\"internalType\":\"enum ConformityState.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFORMITY_STATE_FUNCTIONING\",\"outputs\":[{\"internalType\":\"enum ConformityState.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFORMITY_STATE_WAITING_REVIEW\",\"outputs\":[{\"internalType\":\"enum ConformityState.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI_\",\"type\":\"string\"}],\"name\":\"addActor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actor_\",\"type\":\"address\"}],\"name\":\"addContractToActor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"votingPower_\",\"type\":\"uint8\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress_\",\"type\":\"address\"}],\"name\":\"assertOpFromContractManager\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"checkAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"getActor\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum ConformityState.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"participatingContracts\",\"type\":\"address[]\"}],\"internalType\":\"struct IUserRegistry.Actor\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"getActorName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"getManagingContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"getMember\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"votingPower\",\"type\":\"uint8\"},{\"internalType\":\"enum ConformityState.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"managingContractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI\",\"type\":\"string\"}],\"internalType\":\"struct IUserRegistry.Member\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member_\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"memberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"name\":\"setTraceabilityContractFactoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI_\",\"type\":\"string\"}],\"name\":\"updateActor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"enum ConformityState.State\",\"name\":\"newState_\",\"type\":\"uint8\"}],\"name\":\"updateActorState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"infoURI_\",\"type\":\"string\"}],\"name\":\"updateMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"managingContractAddress_\",\"type\":\"address\"}],\"name\":\"updateMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"},{\"internalType\":\"enum ConformityState.State\",\"name\":\"newState_\",\"type\":\"uint8\"}],\"name\":\"updateMemberState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(address)\":{\"details\":\"For use after cloning a contract, where initial memory is 0\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO/UserRegistry.sol\":\"UserRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/ConformityState.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.19;\\n\\ncontract ConformityState {\\n    enum State {\\n        FUNCTIONING,\\n        CORRECTIVE_MEASURE_NEEDED,\\n        WAITING_REVIEW\\n    }\\n\\n    State public constant CONFORMITY_STATE_FUNCTIONING = State.FUNCTIONING;\\n    State public constant CONFORMITY_STATE_CORRECTIVE_MEASURE_NEEDED =\\n        State.CORRECTIVE_MEASURE_NEEDED;\\n    State public constant CONFORMITY_STATE_WAITING_REVIEW =\\n        State.WAITING_REVIEW;\\n\\n    // Errors\\n    error InvalidConformityState();\\n\\n    function assertValidConformityState(State state_) internal pure {\\n        if (\\n            state_ != State.FUNCTIONING &&\\n            state_ != State.CORRECTIVE_MEASURE_NEEDED &&\\n            state_ != State.WAITING_REVIEW\\n        ) revert InvalidConformityState();\\n    }\\n}\\n\",\"keccak256\":\"0x218bd1f046511e60abbe3260e066efe507bd153c399b24d737abcc7c6c7f928e\",\"license\":\"Apache-2.0\"},\"contracts/DAO/IUserRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.19;\\n\\nimport \\\"../ConformityState.sol\\\";\\n\\n/** @dev @TODO docs\\n */\\nabstract contract IUserRegistry {\\n    uint8 constant MAX_VOTING_POWER = 49;\\n\\n    // Type declarations\\n    struct Member {\\n        address addr;\\n        uint8 votingPower;\\n        ConformityState.State state;\\n        address managingContractAddress;\\n        string name;\\n        string infoURI;\\n    }\\n\\n    struct Actor {\\n        address addr;\\n        ConformityState.State state;\\n        string name;\\n        string infoURI;\\n        address[] participatingContracts;\\n    }\\n\\n    // Errors\\n    error UserAlreadyExists();\\n    error MemberDoesNotExist();\\n    error ActorDoesNotExist();\\n    error TransactionNotFromOriginalActorAddress();\\n    error UserCannotManageContract();\\n    error InvalidVotingPower(uint8 votingPower);\\n\\n    function setTraceabilityContractFactoryAddress(\\n        address addr_\\n    ) external virtual;\\n\\n    function getMember(\\n        address addr_\\n    ) public view virtual returns (Member memory);\\n\\n    function getActor(address addr_) public view virtual returns (Actor memory);\\n\\n    function getActorName(\\n        address addr_\\n    ) public view virtual returns (string memory);\\n\\n    function getVotes(address member_) public view virtual returns (uint8);\\n\\n    function getManagingContractAddress(\\n        address addr_\\n    ) public view virtual returns (address);\\n\\n    function addMember(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_,\\n        uint8 votingPower_\\n    ) public virtual;\\n\\n    function updateMember(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public virtual;\\n\\n    function updateMember(\\n        address addr_,\\n        address managingContractAddress_\\n    ) public virtual;\\n\\n    function updateMemberState(\\n        address addr_,\\n        ConformityState.State newState_\\n    ) public virtual;\\n\\n    function addActor(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public virtual;\\n\\n    function updateActor(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public virtual;\\n\\n    function updateActorState(\\n        address addr_,\\n        ConformityState.State newState_\\n    ) public virtual;\\n\\n    function addContractToActor(\\n        address contract_,\\n        address actor_\\n    ) public virtual;\\n\\n    function checkAccess(\\n        address contract_,\\n        address addr_\\n    ) public view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x9bdbf52d0c0c337c3c4f685b7d2d8ead3d529cebcb71869f719dfc8dbb346450\",\"license\":\"Apache-2.0\"},\"contracts/DAO/UserRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.19;\\n\\nimport \\\"../custom/Ownable.sol\\\";\\nimport \\\"../ConformityState.sol\\\";\\nimport \\\"./IUserRegistry.sol\\\";\\n\\ncontract UserRegistry is IUserRegistry, Ownable, ConformityState {\\n    // State variables\\n    uint256 public memberCount;\\n    address private TraceabilityContractFactory;\\n\\n    mapping(address => Member) members;\\n    mapping(address => Actor) actors;\\n\\n    // Modifiers\\n    modifier onlyOwnerOrFactoryContract() {\\n        if (!isOwner() && msg.sender != TraceabilityContractFactory)\\n            revert UserNotOwner();\\n        _;\\n    }\\n\\n    modifier onlyOwnerOrFactoryOrManager(address contract_) {\\n        if (\\n            !isOwner() &&\\n            msg.sender != TraceabilityContractFactory &&\\n            members[msg.sender].managingContractAddress != contract_\\n        ) revert UserNotOwner();\\n        _;\\n    }\\n\\n    // Functions\\n\\n    //* constructor\\n\\n    //* receive function\\n\\n    //* fallback function (if exists)\\n\\n    //* external\\n    function setTraceabilityContractFactoryAddress(\\n        address addr_\\n    ) external override onlyOwner {\\n        TraceabilityContractFactory = addr_;\\n    }\\n\\n    //* public\\n    function getMember(\\n        address addr_\\n    ) public view override returns (Member memory) {\\n        return members[addr_];\\n    }\\n\\n    function getActor(\\n        address addr_\\n    ) public view override returns (Actor memory) {\\n        return actors[addr_];\\n    }\\n\\n    function getActorName(\\n        address addr_\\n    ) public view override returns (string memory) {\\n        return actors[addr_].name;\\n    }\\n\\n    function getVotes(address member_) public view override returns (uint8) {\\n        return members[member_].votingPower;\\n    }\\n\\n    function getManagingContractAddress(\\n        address addr_\\n    ) public view override returns (address) {\\n        return members[addr_].managingContractAddress;\\n    }\\n\\n    function addMember(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_,\\n        uint8 votingPower_\\n    ) public override onlyOwner {\\n        _assertMemberDoesNotExist(addr_);\\n        _assertValidVotingPower(votingPower_);\\n\\n        memberCount++;\\n\\n        Member storage member = members[addr_];\\n        member.addr = addr_;\\n        member.name = name_;\\n        member.infoURI = infoURI_;\\n        member.votingPower = votingPower_;\\n        member.state = ConformityState.CONFORMITY_STATE_FUNCTIONING;\\n    }\\n\\n    function updateMember(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public override onlyOwner {\\n        Member storage member = members[addr_];\\n        _assertMemberExists(member);\\n\\n        member.name = name_;\\n        member.infoURI = infoURI_;\\n    }\\n\\n    function updateMember(\\n        address addr_,\\n        address managingContractAddress_\\n    ) public override onlyOwnerOrFactoryContract {\\n        Member storage member = members[addr_];\\n        _assertMemberExists(member);\\n\\n        member.managingContractAddress = managingContractAddress_;\\n    }\\n\\n    function updateMemberState(\\n        address addr_,\\n        ConformityState.State newState_\\n    ) public override onlyOwner {\\n        Member storage member = members[addr_];\\n        ConformityState.assertValidConformityState(newState_);\\n        _assertMemberExists(member);\\n\\n        member.state = newState_;\\n    }\\n\\n    function addActor(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public override {\\n        _assertActorDoesNotExist(addr_);\\n\\n        Actor storage actor = actors[addr_];\\n        actor.addr = addr_;\\n        actor.name = name_;\\n        actor.infoURI = infoURI_;\\n        actor.state = ConformityState.CONFORMITY_STATE_FUNCTIONING;\\n    }\\n\\n    function updateActor(\\n        address addr_,\\n        string calldata name_,\\n        string calldata infoURI_\\n    ) public override {\\n        Actor storage actor = actors[addr_];\\n        _assertActorExists(actor);\\n        _assertSenderIsActor(actor);\\n\\n        actor.name = name_;\\n        actor.infoURI = infoURI_;\\n    }\\n\\n    function updateActorState(\\n        address addr_,\\n        ConformityState.State newState_\\n    ) public override onlyOwner {\\n        Actor storage actor = actors[addr_];\\n        ConformityState.assertValidConformityState(newState_);\\n        _assertActorExists(actor);\\n\\n        actor.state = newState_;\\n    }\\n\\n    function addContractToActor(\\n        address contract_,\\n        address actor_\\n    ) public override onlyOwnerOrFactoryOrManager(contract_) {\\n        actors[actor_].participatingContracts.push(contract_);\\n    }\\n\\n    function checkAccess(\\n        address contract_,\\n        address addr_\\n    ) public view override returns (bool) {\\n        address[] memory contracts = actors[addr_].participatingContracts;\\n        for (uint i = 0; i < contracts.length; i++) {\\n            if (contracts[i] == contract_) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    //* internal\\n\\n    //* private\\n\\n    //* asserts\\n    function assertOpFromContractManager(\\n        address sender_,\\n        address contractAddress_\\n    ) public view {\\n        if (getManagingContractAddress(sender_) != contractAddress_)\\n            revert(\\\"UserCannotManageContract();\\\");\\n    }\\n\\n    function _assertMemberDoesNotExist(address addr_) internal view {\\n        if (members[addr_].addr != address(0)) revert UserAlreadyExists();\\n    }\\n\\n    function _assertActorDoesNotExist(address addr_) internal view {\\n        if (actors[addr_].addr != address(0)) revert UserAlreadyExists();\\n    }\\n\\n    function _assertMemberExists(Member storage member_) internal view {\\n        if (member_.addr == address(0)) revert MemberDoesNotExist();\\n    }\\n\\n    function _assertActorExists(Actor storage actor_) internal view {\\n        if (actor_.addr == address(0)) revert ActorDoesNotExist();\\n    }\\n\\n    function _assertSenderIsActor(Actor storage actor_) internal view {\\n        if (actor_.addr != msg.sender)\\n            revert TransactionNotFromOriginalActorAddress();\\n    }\\n\\n    function _assertValidVotingPower(uint8 votingPower_) internal pure {\\n        if (votingPower_ > MAX_VOTING_POWER)\\n            revert InvalidVotingPower(votingPower_);\\n    }\\n}\\n\",\"keccak256\":\"0x4f24bae61d29d88acf98c3c6e5c1c6654f54576aaf97cb50004d9d7cac8ce805\",\"license\":\"Apache-2.0\"},\"contracts/custom/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.19;\\n\\ncontract Ownable {\\n    address public owner;\\n\\n    error UserNotOwner();\\n    error ForbiddenTransferToZeroAddress();\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        _assertIsOwner();\\n        _;\\n    }\\n\\n    /** \\n        @dev For use after cloning a contract, where initial memory is 0\\n    */\\n    function init(address sender_) public {\\n        if (owner == address(0)) owner = sender_;\\n    }\\n\\n    function isOwner() public view returns (bool) {\\n        return msg.sender == owner;\\n    }\\n\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        if (newOwner == address(0)) revert ForbiddenTransferToZeroAddress();\\n        owner = newOwner;\\n    }\\n\\n    function _assertIsOwner() internal view {\\n        if (!isOwner()) revert UserNotOwner();\\n    }\\n}\\n\",\"keccak256\":\"0x7d7751e0df61c0500007a8c511e7c77651f8b0130fecd2c7e20b6066ed89944f\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "init(address)": {
        "details": "For use after cloning a contract, where initial memory is 0"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5634,
        "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 608,
        "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
        "label": "memberCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 610,
        "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
        "label": "TraceabilityContractFactory",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 615,
        "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
        "label": "members",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Member)448_storage)"
      },
      {
        "astId": 620,
        "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
        "label": "actors",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Actor)461_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_enum(State)5": {
        "encoding": "inplace",
        "label": "enum ConformityState.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Actor)461_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IUserRegistry.Actor)",
        "numberOfBytes": "32",
        "value": "t_struct(Actor)461_storage"
      },
      "t_mapping(t_address,t_struct(Member)448_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IUserRegistry.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)448_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Actor)461_storage": {
        "encoding": "inplace",
        "label": "struct IUserRegistry.Actor",
        "members": [
          {
            "astId": 450,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 453,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "state",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(State)5"
          },
          {
            "astId": 455,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 457,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "infoURI",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 460,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "participatingContracts",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Member)448_storage": {
        "encoding": "inplace",
        "label": "struct IUserRegistry.Member",
        "members": [
          {
            "astId": 436,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 438,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "votingPower",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 441,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "state",
            "offset": 21,
            "slot": "0",
            "type": "t_enum(State)5"
          },
          {
            "astId": 443,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "managingContractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 445,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 447,
            "contract": "contracts/DAO/UserRegistry.sol:UserRegistry",
            "label": "infoURI",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}